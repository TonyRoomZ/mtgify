!function(){return function t(e,n,r){function s(i,a){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!a&&c)return c(i,!0);if(o)return o(i,!0);var d=new Error("Cannot find module '"+i+"'");throw d.code="MODULE_NOT_FOUND",d}var l=n[i]={exports:{}};e[i][0].call(l.exports,function(t){var n=e[i][1][t];return s(n||t)},l,l.exports,t,e,n,r)}return n[i].exports}for(var o="function"==typeof require&&require,i=0;i<r.length;i++)s(r[i]);return s}}()({1:[function(t,e,n){"use strict";const r=t("./DeckList"),s=t("./HoverCard"),o=t("./CardAPI");class i extends HTMLElement{setupTextListener(t){const e=this;e._observer=new MutationObserver(function(){e._observer.disconnect(),t()}),e._observer.observe(e,{childList:!0})}}class a extends i{connectedCallback(){this.name=this.getAttribute("name"),this.innerHTML="";const t=`http://magiccards.info/query?q=${this.name}`,e=document.createElement("a");e.setAttribute("href",t),e.setAttribute("target","_blank"),e.innerHTML=this.name,this.appendChild(e),this.anchor=e,this.onLoad()}getCardInfo(){return o.getCardInfo(this.name)}onLoad(){}}customElements.define("card-text",class extends a{onLoad(){this.onmouseover=(t=>{s.show(this,t)}),this.onmouseout=(t=>{s.hide(this,t)}),this.onmousemove=(t=>{s.move(this,t)})}}),customElements.define("card-image",class extends a{onLoad(){this.loadMultiverseId()}loadMultiverseId(t){const e=this;e.getCardInfo().then(t=>{const n=document.createElement("img");n.setAttribute("src",t.imgUrl),n.setAttribute("alt",e.name),n.setAttribute("title",e.name),e.anchor.innerHTML="",e.anchor.appendChild(n),e.image=n})}}),customElements.define("card-list",class extends i{connectedCallback(){const t=this.getAttribute("src");this.listTitle=document.createElement("card-list-title"),this.container=document.createElement("card-list-container"),this.appendChild(this.listTitle),this.appendChild(this.container),this.renderText(t)}renderText(t){const e=this;e.listTitle.innerHTML=this.getAttribute("name"),e.container.innerHTML="loading deck list...",r.DeckListFromUrl(t,{},t=>o.getCardInfo(t)).then(t=>{e.container.innerHTML=t.map(t=>`\n          <card-list-category>\n            <card-list-category-title>${t.type}</card-list-category-title>\n            ${t.cards.map(t=>`\n              <div>${t.quantity}x <card-text name="${t.card.name}"></card-text></div>\n            `).join("")}\n          </card-list-category>\n        `).join("")})}}),customElements.define("card-list-title",class extends HTMLElement{}),customElements.define("card-list-container",class extends HTMLElement{}),customElements.define("card-list-category",class extends HTMLElement{}),customElements.define("card-list-category-title",class extends HTMLElement{}),e.exports={}},{"./CardAPI":2,"./DeckList":4,"./HoverCard":5}],2:[function(t,e,n){"use strict";const r=t("./Config"),s=new class{constructor(){const t=this;t.lookupInfo=new Promise((e,n)=>{t.resolveInfo=(t=>e(t))}),window.fetch(`${r().apiUrl}/json/CardInfo.lower.json`).then(t=>t.json()).then(e=>t.resolveInfo(e))}normalizeCardName(t){return t.trim().toLowerCase()}performLookup(t,e){return t[this.normalizeCardName(e)]}getCardInfo(t){const e=this;return e.lookupInfo.then(n=>e.performLookup(n,t)).then(t=>{const e=r().isTest?"CardImage.jpg":`http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=${t.mid}&type=card`;return{...t,imgUrl:e}})}};e.exports=s},{"./Config":3}],3:[function(t,e,n){"use strict";e.exports=(t=>({isTest:(t=t||window).AUTOCARD_TEST||!1,apiUrl:t.AUTOCARD_API||"http://autocard.mpaulweeks.com"}))},{}],4:[function(t,e,n){"use strict";const r=["Land","Creature","Artifact","Enchantment","Planeswalker","Instant","Sorcery"].reverse(),s=["Creature","Planeswalker","Artifact","Enchantment","Instant","Sorcery","Land"];class o{constructor(t,e,n){this.text=t,this.options=e,this.cardLookup=n}categorizeCardList(){const{text:t,cardLookup:e}=this,n=[];return t.split("\n").forEach(t=>{const s=t.trim();if(0===s.length)return;const o=s.indexOf("x "),i=s.substring(0,o),a=s.substring(o+2),c=e(a).then(e=>{if(!e)return console.log("failed to find card",t),null;let n="unknown";return r.forEach(t=>{e.types.includes(t)&&(n=t)}),{quantity:i,type:n,card:e}});n.push(c)}),Promise.all(n).then(t=>this.processData(t))}processData(t){const{options:e}=this;e.reverse&&(t=t.reverse());const n={};return t.forEach(t=>{null!==t&&(n[t.type]||(n[t.type]=[]),n[t.type].push(t))}),n}getDataPromise(){return this.categorizeCardList().then(t=>{const e=[];return s.forEach(n=>{t[n]&&e.push({type:n,cards:t[n]})}),e})}}e.exports={DeckList:o,DeckListFromUrl:function(t,e,n){return fetch(t).then(t=>t.text()).then(t=>new o(t,e,n).getDataPromise())}}},{}],5:[function(t,e,n){const r=311,s=220,o=document.createElement("div");o.style="display: none; position: absolute;",document.addEventListener("DOMContentLoaded",function(){document.body.appendChild(o)});const i=document.createElement("img");i.onerror="this.onerror=null;this.onmouseout=null;this.onmouseover=null;hideImgPopup();",i.width=s,i.height=r,o.appendChild(i),e.exports={show:function(t,e){t.getCardInfo().then(n=>{o.setAttribute("data-mid",n.mid),o.style.top=`${function(t,e){const n=t.offsetHeight;let s=t.offsetTop+n,o=t;for(;null!=o.offsetParent;)s+=null==(o=o.offsetParent).offsetTop?0:o.offsetTop;return screen.height/2<e.screenY&&(s-=r+n),s}(t,e)}px`,o.style.left=`${function(t,e){let n=t.offsetLeft+t.offsetWidth+10,r=t;for(;null!=r.offsetParent;)n+=null==(r=r.offsetParent).offsetLeft?0:r.offsetLeft;return document.body.offsetWidth/2<e.screenX&&(n-=t.offsetWidth+s+20),n}(t,e)}px`,i.src="",i.src=n.imgUrl,o.style.display="block"})},hide:function(t,e){t.getCardInfo().then(t=>{o.getAttribute("data-mid")===String(t.mid)&&(o.style.display="none")})},move:function(t,e){}}},{}],6:[function(t,e,n){t("./AutoCard.js")},{"./AutoCard.js":1}]},{},[6]);